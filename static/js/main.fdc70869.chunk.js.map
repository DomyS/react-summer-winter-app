{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","src_SeasonDisplay_0","src_Spinner","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACjBC,OAAQ,CACJC,KAAM,sBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,kBACNC,SAAU,eAyBHE,EAbO,SAAAC,GAClB,IATeC,EAAKC,EASdC,GATSF,EASUD,EAAMC,KATXC,GASgB,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAILK,EAEDZ,EAAaS,GAAhCP,EAFoBU,EAEpBV,KAAMC,EAFcS,EAEdT,SAEb,OACCU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAC9BI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBd,EAAvB,WACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBd,EAAxB,aC5Bfe,EAAU,SAACZ,GACb,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACVV,EAAMa,WAMvBD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCXTG,6MACHC,MAAQ,CAAEf,IAAK,KAAMgB,aAAc,uFAEf,IAAAC,EAAAC,KACnBC,OAAOC,UAAUC,YAAYC,mBACzB,SAAAC,GAAQ,OAAIN,EAAKO,SAAS,CAAExB,IAAKuB,EAASE,OAAOC,YACjD,SAAAC,GAAG,OAAIV,EAAKO,SAAS,CAAER,aAAcW,EAAIf,oDAK7C,OAAIM,KAAKH,MAAMC,eAAiBE,KAAKH,MAAMf,IAChCM,EAAAC,EAAAC,cAAA,qBAAaU,KAAKH,MAAMC,eAG9BE,KAAKH,MAAMC,cAAgBE,KAAKH,MAAMf,IAChCM,EAAAC,EAAAC,cAACoB,EAAD,CAAe5B,IAAKkB,KAAKH,MAAMf,MAGnCM,EAAAC,EAAAC,cAACqB,EAAD,CAASjB,QAAQ,oEAIpB,OACAN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVS,KAAKY,wBAzBAC,IAAMC,WA+BxBC,IAASC,OACL5B,EAAAC,EAAAC,cAAC2B,EAAD,MACAC,SAASC,cAAc","file":"static/js/main.fdc70869.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        text: 'Lets hit the beach!',\r\n        iconName: 'sun'\r\n    },\r\n    winter: {\r\n        text: 'Burr it is cold',\r\n        iconName: 'snowflake'\r\n    }\r\n}\r\n\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month < 9) {\r\n        return lat > 0 ? 'summer' : 'winter';\r\n    } else {\r\n        return lat > 0 ? 'winter' : 'summer';\r\n    }\r\n}\r\n\r\nconst SeasonDisplay = props => {\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n   const { text, iconName } = seasonConfig[season]\r\n\r\n    return (\r\n     <div className={`season-display ${season}`}>\r\n         <i className={`icon-left massive ${iconName} icon`} />\r\n         <h1>{text}</h1>\r\n         <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    message: 'Loading...'\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from \"./Spinner\";\r\n\r\nclass App extends React.Component {\r\n   state = { lat: null, errorMessage: '' };\r\n\r\n   componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n        position => this.setState({ lat: position.coords.latitude}),\r\n        err => this.setState({ errorMessage: err.message })\r\n    );\r\n}\r\n\r\nrenderContent() {\r\n    if (this.state.errorMessage && !this.state.lat) {\r\n        return <div>Error: {this.state.errorMessage}</div>\r\n    } \r\n\r\n    if (!this.state.errorMessage && this.state.lat) {\r\n        return <SeasonDisplay lat={this.state.lat} />\r\n    }\r\n\r\n    return <Spinner message=\"Please accept loaction request\" />;\r\n}\r\n\r\n    render () {\r\n        return (\r\n        <div className=\"border red\">\r\n            {this.renderContent()}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render (\r\n    <App />,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}